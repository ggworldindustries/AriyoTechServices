<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
	
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
	
	<link rel="stylesheet" href="app.css" />
	
    <link rel="icon" type="image/png" href="favicon.ico" />
    @if(RenderModeForPage is not null)
    {
        <HeadOutlet @rendermode="@RenderModeForPage" />    
    }
    else
    {
        <HeadOutlet />
    }
</head>

<body>
    @if(RenderModeForPage is not null)
    {
        <Routes @rendermode="@RenderModeForPage" />
    }
    else
    {
        <Routes />
    }
    <script src="_framework/blazor.web.js"></script>
	<script src="_content/MudBlazor/MudBlazor.min.js"></script>

    <script type="text/javascript">
        window.addEventListener('DOMContentLoaded', (event) => {
            const appData = document.querySelector('[data-appdata]').dataset.appdata;
            const parsedAppData = JSON.parse(appData);
            const themeCookie = document.cookie.replace(/(?:(?:^|.*;\s*)theme\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (themeCookie === "true" || themeCookie === "false") {
                parsedAppData.Theme = themeCookie === "true";
            } else {
                parsedAppData.Theme = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            }
            document.querySelector('[data-appdata]').dataset.appdata = JSON.stringify(parsedAppData);
        });
    </script>
</body>

</html>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments("/Account")
        ? null
        : InteractiveAuto;
}
