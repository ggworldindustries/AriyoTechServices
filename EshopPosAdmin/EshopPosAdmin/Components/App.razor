@using EshopPosAdmin.Client.Layout
@using EshopPosAdmin.Controllers
@using MudBlazor
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="EshopPosAdmin.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="InteractiveAuto" />
</head>

<body>

    <Routes @rendermode="InteractiveAuto"  />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>

</body>

</html>
@code{
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    public AppData appData = new();
    bool _isDark = false;
    public string Name { get; set; } = string.Empty;
    private MudThemeProvider _mudThemeProvider = new MudThemeProvider();
    
    @inject HttpClient _httpClient
    @inject NavigationManager _navManger;
    protected override async Task OnInitializedAsync()
    {
        var rrurl = _navManger.Uri;
        var myTheme = await _httpClient.GetFromJsonAsync<bool>($"{rrurl}GetTheme");
        _isDark = myTheme;
        appData.Theme = _isDark;
        StateHasChanged();
    }

    public async Task CustomTheme()
    {
        var themecookie = HttpContext.Request.Cookies["theme"];
        if (!string.IsNullOrWhiteSpace(themecookie))
        {
            if (themecookie == "true")
            {
                _isDark = true;
                appData.Theme = _isDark;
            }
            else
            {
                _isDark = false;
                appData.Theme = _isDark;
            }
        }

    }
  
  

}
